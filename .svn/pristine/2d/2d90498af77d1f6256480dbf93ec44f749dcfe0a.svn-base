package com.sg.web.controller;

import com.sg.model.ArticleEntity;
import com.sg.model.TestEntity;
import com.sg.service.ArticleService;
import com.sg.web.util.ControllerUtil;
import com.sg.web.util.JsonUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by sg on 2016/7/19.
 */
@Controller
@RequestMapping(value = "/")
public class BlogController {
    @Autowired
    private ArticleService articleService;


    @RequestMapping(value = "/index", method = RequestMethod.GET)
    public String index(HttpServletRequest request, ServletResponse response) {
        List<ArticleEntity> articles = this.articleService.getAllArticle();
        request.setAttribute("articles",articles);
        return "index";
    }

    @RequestMapping(value = "/article", method = RequestMethod.GET)
    public String article(ServletRequest request, ServletResponse response) {
        return "blog/article";
    }

    @RequestMapping(value = "/admin", method = RequestMethod.GET)
    public String admin(ServletRequest request, ServletResponse response) {
        return "admin";
    }

    @RequestMapping(value="/admin/postArticle",method = RequestMethod.GET)
    public String postArticle(ServletRequest request,ServletResponse response){
        return "blog/postArticle";
    }

    @RequestMapping(value="/article/save",method = RequestMethod.POST)
    public String saveArticle(ServletRequest request, ServletResponse response, ArticleEntity article,PrintWriter printWriter){
        this.articleService.saveArticle(article);
        return "blog/managerArticle";
    }
    @RequestMapping(value="/admin/managerArticle",method = RequestMethod.GET)
    public String managerArticle(ServletRequest request, ServletResponse response){
        return "blog/managerArticle";
    }
    @RequestMapping(value = "/admin/articleList",method = RequestMethod.GET)
    @ResponseBody
    public HashMap<String, Object> articleList(@RequestParam(value = "page", defaultValue = "1") int pageNumber,
                            @RequestParam(value = "limit", defaultValue = "10") int pageSize,
                            @RequestParam(value = "sortName", defaultValue = "id") String sortName,
                            @RequestParam(value = "sortType", defaultValue = "desc") String sortType,ServletRequest request, ServletResponse response){
        HashMap<String,Object>result = new HashMap<String, Object>();
        Map<String,String> params = new HashMap<String, String>();
        params.put("title","");
        Page<ArticleEntity> pageArticles = this.articleService.getPageArticleByParams(pageNumber,pageSize,sortName,sortType,params);


//        List<ArticleEntity> articles = this.articleService.getAllArticle();
//        Long count = this.articleService.getAllArticleCount();
        //ControllerUtil.printGrid(printWriter,pageArticles.getTotalElements(),pageArticles.getContent());
        result.put("totalCount",pageArticles.getNumberOfElements());
        result.put("items",pageArticles.getContent());
        return result;
    }

    @RequestMapping(value="/admin/articleDelete")
    @ResponseBody
    public HashMap<String,Object> articleDelete(@RequestParam(value="id")Long id){
        HashMap<String,Object> result = new HashMap<String, Object>();

        if(id != null){
            this.articleService.deleteArticleById(id);
        }
        result = ControllerUtil.createReturnObject(true,"hahahh",null);
        return result;
    }




    @RequestMapping(value="test",method = RequestMethod.GET)
    public ModelAndView test(HttpServletRequest request, HttpServletResponse response){
        ModelAndView mv = new ModelAndView();
        mv.setViewName("test");
        TestEntity test = new TestEntity();
        test.setName("sg");
        test.setRemark("123");
        List<TestEntity> users = new ArrayList<TestEntity>();
        users.add(test);
        mv.addObject("users",users);
        return mv;
    }
}
